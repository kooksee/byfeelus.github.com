<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>技术文章 on 百里求一的博客</title>
        <link>http://kooksee.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/</link>
        <language>zh-CN</language>
        <author>CoderZh</author>
        <rights>Copyright (c) 2015, CoderZh; all rights reserved.</rights>
        <updated>Sat, 19 Mar 2016 15:05:47 CST</updated>
        
        <item>
            <title>懒程序员和他的 dotfiles</title>
            <link>http://kooksee.github.io/post/2016/2016-03-19-dotfiles/</link>
            <pubDate>Sat, 19 Mar 2016 15:05:47 CST</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/post/2016/2016-03-19-dotfiles/</guid>
            <description>

&lt;p&gt;如果你不知道什么是 dotfiles，那你就不会知道什么是 dotfiles。如果你知道什么是 dotfiles，那你就知道什么是 dotfiles。&lt;/p&gt;

&lt;p&gt;以一段废话开场，引出今天的主题：&lt;code&gt;dotfiles&lt;/code&gt;。软件匠艺社区（&lt;a href=&#34;codingstyle.cn&#34;&gt;codingstyle.cn&lt;/a&gt;）周三晚上有一期分享介绍 Vim 时提到了 dotfiles，这篇文章我们就来好好说一说 dotfiles。&lt;/p&gt;

&lt;h3 id=&#34;什么是-dotfiles:50fc662a6f6921bb445d80a429a8e146&#34;&gt;什么是 dotfiles？&lt;/h3&gt;

&lt;p&gt;dot 即「点」的意思，意思是以点开头的文件。如果你不是程序员，你大概会说，我咋从来没见过这种文件啊？因为这些文件通常都是隐藏文件，平常一般看不到，比如 .git 目录。但这里说的 dotfiles 主要是指用户 home 目录下的点文件，这类文件一般是一些配置文件，比如 vim 的配置文件 .vimrc，zsh 的配置文件 .zshrc 等。通过设置这些配置文件，可以实现出很强大的功能，比如有不少人通过配置 .vimrc，把 vim 活生生变成了一个功能强大的 IDE。还有一些偷懒的程序员在 .profile 之类的文件里设置了大量命令的 alias。以至于你还没看清楚他敲的第一个命令，他已经敲了三四个命令了。&lt;/p&gt;

&lt;p&gt;通过配置各种 dotfiles，程序员可以把系统定制得既顺手又高效。但是问题来了，自己千辛万苦调的设置，如果换一台机器，又得重新设置一遍。这对于追求效率的程序员来说是不可接受的。&lt;/p&gt;

&lt;h3 id=&#34;dotfiles-管理:50fc662a6f6921bb445d80a429a8e146&#34;&gt;dotfiles 管理&lt;/h3&gt;

&lt;p&gt;于是会玩又懒的程序员想出了一个办法，把所有的 dotfiles 放在一个单独的目录进行统一管理，放到 GitHub 或者通过网盘同步。&lt;/p&gt;

&lt;p&gt;为了让 dotfiles 生效，主要有两种方式：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;通过一个脚本，把所有 dotfile 文件 rsync 到 HOME 目录。&lt;/li&gt;
&lt;li&gt;使用软链，让 HOME 目录的 dotfile 文件指向你目录的 dotfile 文件。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一种方式适合机器初装，但是假如你有两台机器，希望配置能方便的进行同步，第二种方式是更好的选择。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s ~/dotfiles/.vimrc ~/.vimrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是，假如你的 dotfile 文件很多，手工去维护那些软链也是一件麻烦的事情。而程序员又是最不能忍受麻烦的，于是造了各种轮子去维护和管理这些 dotfiles 。&lt;/p&gt;

&lt;p&gt;有些人把软链的管理写成一个 Shell 脚本，也有人做成特定的工具。比如：&lt;a href=&#34;https://github.com/thoughtbot/rcm&#34;&gt;rcm&lt;/a&gt;、 &lt;a href=&#34;http://skwp.github.io/dotfiles/&#34;&gt;YARD&lt;/a&gt;、 &lt;a href=&#34;https://pypi.python.org/pypi/dotfiles&#34;&gt;dotfiles&lt;/a&gt;、 &lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;mackup&lt;/a&gt; ……&lt;/p&gt;

&lt;h3 id=&#34;mackup:50fc662a6f6921bb445d80a429a8e146&#34;&gt;mackup&lt;/h3&gt;

&lt;p&gt;在对比了各种 dotfiles 工具后，我最终选择了 &lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;mackup&lt;/a&gt;。理由主要如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用方便，配置起来非常简单。&lt;/li&gt;
&lt;li&gt;社区贡献了大量现成的软件的 dotfiles 配置，可以直接使用。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在 OS X 下，可以直接使用 brew 安装 mackup。其他系统下，可以直接使用 pip 安装。安装好后，备份和还原都只需要一个命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 备份
$ mackup backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在新机器上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 还原
$ mackup restore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你不想要那些软链了，只需要执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mackup uninstall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mackup 可以通过配置文件，指定你希望备份哪些 dotfiles，以及备份到哪里（支持备份到 Dropbox、Google Drive、Copy、iCloud、Box 以及指定的目录。&lt;/p&gt;

&lt;p&gt;比如在我的 mac 上，我的 &lt;a href=&#34;https://github.com/coderzh/dotfiles/blob/master/home/.mackup.cfg&#34;&gt;.mackup.cfg&lt;/a&gt; 这样设置的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[storage]
engine = file_system
path = dotfiles
directory = home

[applications_to_sync]
atom
pycharmce
myvim
ideaic15
zsh
mackup
dash
karabiner
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;storage&lt;/code&gt; 里指定了备份到文件系统的 ~/dotfiles/home 路径。&lt;code&gt;applications_to_sync&lt;/code&gt; 指定了备份哪些应用的 dotfiles。mackup 预先定义好了大量 application 的 dotfiles，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Atom
Bash
Dash
Emacs
Flux
Git
Gradle
MacOSX
MacVim
npm
Oh My Zsh
Vim
WebStorm
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要定制某个 application 的 dotfiles 也很简单，比如我发现 mackup 自带的配置里没有 IntelliJ Community 版本的配置，我只需要在新建一个文件： ~/.mackup/ideaic15.cfg ：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[application]
name = My IntelliJ IDEA 15

[configuration_files]
Library/Preferences/IdeaIC15/keymaps/Mac OS X copy.xml
Library/Preferences/IdeaIC15/options/keymap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;configuration_files&lt;/code&gt; 里指定我需要备份的文件即可。非常的简单易用。&lt;/p&gt;

&lt;h3 id=&#34;自动安装软件:50fc662a6f6921bb445d80a429a8e146&#34;&gt;自动安装软件&lt;/h3&gt;

&lt;p&gt;在一台新机器上，把之前机器装的软件一个一个手动安装也是非常耗时和麻烦的事情。如果你使用的是 Mac OS X，将会变得非常简单，因为绝大部分的软件开发包及软件都可以通过 &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; 和 &lt;a href=&#34;https://caskroom.github.io/&#34;&gt;brew cask&lt;/a&gt; 来安装。&lt;/p&gt;

&lt;p&gt;我的 Mac 上 99.9% 的软件，可以通过我写的 &lt;a href=&#34;https://github.com/coderzh/dotfiles/blob/master/install/brew.sh&#34;&gt;brew.sh&lt;/a&gt; 脚本来安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Install Homebrew

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished.
while true; do sudo -n true; sleep 60; kill -0 &amp;quot;$$&amp;quot; || exit; done 2&amp;gt;/dev/null &amp;amp;

# Check for Homebrew,
# Install if we don&#39;t have it
if test ! $(which brew); then
  echo &amp;quot;Installing homebrew...&amp;quot;
  ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
fi

brew tap homebrew/versions
brew update
brew upgrade --all

# Install packages
apps=(
    caskroom/cask/brew-cask
    cmake
    coreutils
    findutils
    git
    gnu-sed --with-default-names
    go
    hugo
    mercurial
    mackup
    macvim
    mysql
    android-platform-tools
    python
    ruby
    svn
    vim
    wget
    zsh
)

caskapps=(
    android-studio
    alfred
    atom
    cheatsheet
    dash
    genymotion
    google-chrome
    intellij-idea-ce
    iterm2
    java
    karabiner
    keepassx
    kindle
    macdown
    pomotodo
    pycharm-ce
    qq
    qqmusic
    qqmacmgr
    sogouinput
    thunder
    vagrant
    virtualbox
    vlc
    wiznote
    youdao
)

brew install &amp;quot;${apps[@]}&amp;quot;
brew tap caskroom/versions
brew cask update
brew cask install --appdir=&amp;quot;/Applications&amp;quot; &amp;quot;${caskapps[@]}&amp;quot;
brew cleanup
brew cask cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pip-npm-gem:50fc662a6f6921bb445d80a429a8e146&#34;&gt;pip、npm、gem&lt;/h3&gt;

&lt;p&gt;使用 pip、npm、gem 安装的包也使用脚本进行一键安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install --upgrade pip
pip install powerline-status
pip install MySQL-python
pip install tornado
pip install torndb
pip install pycrypto
pip install mock
# npm、gem ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;os-x-的系统设置:50fc662a6f6921bb445d80a429a8e146&#34;&gt;OS X 的系统设置&lt;/h3&gt;

&lt;p&gt;当你拿到一台新的 Mac 然后开机时，不知道有没有被 Duang~ 的一声吓到的经历。当时吓得的宝宝我赶紧找了如何关闭开机声音的方法（设置静音、插上耳机都不管用！），只要执行一条命令即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nvram SystemAudioVolume=&amp;quot; &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很多的系统设置都可以通过命令来完成，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 电池显示是百分百
defaults write com.apple.menuextra.battery -bool true

# 设置键盘按键重复的延迟
defaults write NSGlobalDomain KeyRepeat -int 3

# 禁止自动拼写纠正
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Finder 显示状态栏
defaults write com.apple.finder ShowStatusBar -bool true

# Finder 显示地址栏
defaults write com.apple.finder ShowPathbar -bool true

# 禁止在网络驱动器上生成 .DS_Store 文件
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;字体:50fc662a6f6921bb445d80a429a8e146&#34;&gt;字体&lt;/h3&gt;

&lt;p&gt;程序员喜欢折腾的几样东西：键盘、编辑器、字体。程序员钟爱的几种字体，包括 Source Code Pro、Hack、Menlo 等等，其中对 powerline 字体更是最爱。把所有心爱的字体放在 dotfiles/fonts 目录里，通过自动安装脚本里直接拷贝到 ~/Library/Fonts/ 目录下即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -r ~/dotfiles/fonts/* ~/Library/Fonts/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用 powerline 字体需要安装 powerline-status，这个在前面讲的 pip 脚本里已经安装了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install powerline-status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;zsh 中使用 powerline 字体，只需要在 .zshrc 中加一句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/zsh-powerline.png&#34; alt=&#34;zsh-powerline&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 vim 里使用 powerline 字体，只需要在 .vimrc 里加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim
set laststatus=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/vim-powerline.png&#34; alt=&#34;vim-powerline&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结:50fc662a6f6921bb445d80a429a8e146&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;懒程序员如果拿到了一个新的 Mac 机器，他只需要做如下几步，就可以把这台新的机器变成熟悉的一台机器：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 XCode（最好在 Mac Store 里下载安装完整版的 XCode，因为有些软件安装依赖完整版 XCode）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo softwareupdate -i -a
$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自动安装软件及系统设置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~
$ git clone https://github.com/coderzh/dotfiles.git
$ source dotfiles/install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 mackup 恢复 dotfiles。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp ~/dotfiles/.mackup.cfg ~/
$ cp -r ~/dotfiles/.mackup ~/
$ mackup restore
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;如果一切顺利，程序员，你没有浪费上班时间装电脑，你可以开始搬砖了。:-)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（对了，iTerm2 的 Color 设置好像必须手工操作，配色列表可以在 &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes&#34;&gt;https://github.com/mbadolato/iTerm2-Color-Schemes&lt;/a&gt; 找，作为 JetBrains 粉，最后我选择了 JetBrains Darcula.itermcolors 这一款。）&lt;/p&gt;

&lt;p&gt;在 GitHub 里搜 &lt;code&gt;dotfiles&lt;/code&gt; 可以看到大量的 dotfiles，当然，别忘了 Star 我的 dotfiles：&lt;a href=&#34;https://github.com/coderzh/dotfiles&#34;&gt;https://github.com/coderzh/dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后，温馨提示下，千万不要把 ssh、mysql 密码相关的内容提交上去呦~&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mathiasbynens/dotfiles&#34;&gt;https://github.com/mathiasbynens/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skwp/dotfiles&#34;&gt;https://github.com/skwp/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/dev-setup&#34;&gt;https://github.com/donnemartin/dev-setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webpro/awesome-dotfiles&#34;&gt;https://github.com/webpro/awesome-dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jbernard/dotfiles&#34;&gt;https://github.com/jbernard/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;https://github.com/lra/mackup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webpro/dotfiles&#34;&gt;https://github.com/webpro/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>关于我</title>
            <link>http://kooksee.github.io/about/</link>
            <pubDate>Thu, 01 Jan 2015 08:55:31 CST</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/about/</guid>
            <description>

&lt;p class=&#34;message&#34;&gt;
大家好，我叫百里，是一名程序员。
&lt;/p&gt;

&lt;h3 id=&#34;声明:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;声明&lt;/h3&gt;

&lt;p&gt;本博客所有文章皆为原创。转载请注明原文链接，并最好与本人联系。谢谢！&lt;/p&gt;

&lt;div id=&#34;footer&#34; &gt;

  {{ if .Site.Params.AuthorImg }}
  &lt;div class=&#34;line&#34;&gt;
    &lt;span&gt;&lt;/span&gt;
    &lt;div style=&#39;background:no-repeat url(&#34;{{ .Site.BaseURL }}{{ .Site.Params.AuthorImg }}&#34;) left top;-webkit-background-size:6.875em 6.875em;-moz-background-size:6.875em 6.875em;background-size:6.875em 6.875em;&#39; class=&#34;author&#34; &gt;&lt;/div&gt;
  &lt;/div&gt;
  {{ end }}


  &lt;div class=&#34;social-font clearfix&#34;&gt;
    {{ with .Site.Params.Weibo }}
    &lt;a href=&#34;http://weibo.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;weibo&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.Twitter }}
    &lt;a href=&#34;https://twitter.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;twitter&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.GitHub }}
    &lt;a href=&#34;https://github.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;github&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.Facebook }}
    &lt;a href=&#34;https://www.facebook.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;facebook&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.LinkIn }}
    &lt;a href=&#34;https://www.linkedin.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;linkedin&#34;&gt;&lt;/a&gt;
    {{ end }}
  &lt;/div&gt;
  &lt;p class=&#34;copyright&#34;&gt;Powered by &lt;a href=&#34;http://gohugo.io&#34; target=&#34;_blank&#34; title=&#34;hugo&#34;&gt;hugo&lt;/a&gt; and Theme by &lt;a href=&#34;https://github.com/coderzh/hugo-pacman-theme&#34; target=&#34;_blank&#34; title=&#34;hugo-pacman-theme&#34;&gt;hugo-pacman-theme&lt;/a&gt; © {{ .Now.Year }}
    {{ if .Site.Author.Name }}
    &lt;a href=&#34;{{ .Site.BaseURL }}&#34; target=&#34;_blank&#34; title=&#34;{{ .Site.Author.Name }}&#34;&gt;{{ .Site.Author.Name }}&lt;/a&gt;
    {{ else }}
    &lt;a href=&#34;{{ .Site.BaseURL }}&#34; title=&#34;{{ .Site.Title }}&#34;&gt;{{ .Site.Title }}&lt;/a&gt;
    {{ end }}
  &lt;/p&gt;
&lt;/div&gt;
</description>
        </item>
        
        <item>
            <title>ViEmuVS2013-3.2.1 破解</title>
            <link>http://kooksee.github.io/post/cnblogs/2014-04-02-3640179/</link>
            <pubDate>Wed, 02 Apr 2014 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/post/cnblogs/2014-04-02-3640179/</guid>
            <description>&lt;p&gt;&lt;img src=&#34;http://images.cnitblog.com/blog/16913/201404/020953210788248.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;VS升级到2013后，作为一个Vimer，自然需要更新最新的ViEmu插件，因为现在离了Vim，写代码已经寸步难行了。&lt;/p&gt;

&lt;p&gt;ViEmu 3.2.1的破解其实和Viemu 3.0.13的破解方法一样。安装前关闭VS，步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;双击安装 ViEmuVS2013-3.2.1.vsix.&lt;/li&gt;
&lt;li&gt;在 C:\Users\Administrator\AppData\Local\Microsoft\VisualStudio\12.0.xtensions\ 文件夹下，找到 Viemu 的插件目录（目录下的文件名可以看出来）， 将 NGBridge.dll 覆盖。&lt;/li&gt;
&lt;li&gt;双击导入 viemuvs13.reg.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;另外，新版的ViEmu和VA(Visual Assist X)有冲突，弹不出代码提示。解决方法：&lt;/p&gt;

&lt;p&gt;将修改注册表中：
HKCU\Software\Whole Tomato\Visual Assist X\VANet12 的TrackCaretVisibility 改为 00 即可（改之前先关闭VS）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://files.cnblogs.com/coderzh/Viemu3.2.1-%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E5%8C%85.7z&#34;&gt;Viemu3.2.1-破解安装包.7z&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2014/04/02/3640179.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2014/04/02/3640179.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>tornado</title>
            <link>http://kooksee.github.io/2013/03/13/2958224/</link>
            <pubDate>Wed, 13 Mar 2013 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/2013/03/13/2958224/</guid>
            <description>

&lt;p&gt;wget &lt;a href=&#34;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&#34;&gt;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&lt;/a&gt;
sh setuptools_xxx.egg&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;MongoDB官网：&lt;a href=&#34;http://www.linuxidc.com/Linux/2012-08/linux.asp?url=http://www.mongodb.org/&#34;&gt;http://www.mongodb.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如何在&amp;nbsp;&lt;a href=&#34;http://www.linuxidc.com/topicnews.aspx?tid=2&#34; title=&#34;Ubuntu&#34;&gt;Ubuntu&lt;/a&gt;&amp;nbsp;12.04 (Precise) Server 上安装 MongoDB&lt;/p&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv 7F0CEB10
echo &amp;ldquo;deb &lt;a href=&#34;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&#34;&gt;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&lt;/a&gt; dist 10gen&amp;rdquo; | tee -a /etc/apt/sources.list.d/10gen.list
sudo apt-get -y update&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install mongodb-10gen&lt;/p&gt;

&lt;p&gt;配置文件：/etc/mongodb.conf&lt;/p&gt;

&lt;p&gt;对于基于Upstart的系统，控制脚本在/etc/init/mongodb.conf。&lt;/p&gt;

&lt;p&gt;默认数据文件目录：/var/lib/mongodb&lt;/p&gt;

&lt;p&gt;默认日志文件目录： /var/log/mongodb&lt;/p&gt;

&lt;p&gt;启动MongoDB:&amp;nbsp;&amp;nbsp; sudo service mongodb start&lt;/p&gt;

&lt;p&gt;sudo service mongodb stop&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 停止&lt;/p&gt;

&lt;p&gt;sudo service mongodb restart 重启&lt;/p&gt;

&lt;p&gt;测试：在终端上运行mongo打开mongo shell&lt;/p&gt;

&lt;h1 id=&#34;mongo:478d349564ff1867135392f8c92ebb58&#34;&gt;mongo&lt;/h1&gt;

&lt;p&gt;MongoDB shell version: 2.0.7
connecting to: test&lt;/p&gt;

&lt;p&gt;&amp;gt; db.test.save({a:1})
&amp;gt; db.test.find()
{ &amp;ldquo;_id&amp;rdquo; : ObjectId(&amp;ldquo;502b284cd9de55a0e9ca86d9&amp;Prime;), &amp;ldquo;a&amp;rdquo; : 1 }&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;span-安装nginx-span:478d349564ff1867135392f8c92ebb58&#34;&gt;&lt;span&gt;安装nginx&lt;/span&gt;&lt;/h2&gt;

&lt;pre&gt;sudo apt-get install nginx&lt;/pre&gt;

&lt;p&gt;Ubuntu安装之后的文件结构大致为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下&lt;/li&gt;
&lt;li&gt;程序文件在/usr/sbin/nginx&lt;/li&gt;
&lt;li&gt;日志放在了/var/log/nginx中&lt;/li&gt;
&lt;li&gt;并已经在/etc/init.d/下创建了启动脚本nginx&lt;/li&gt;
&lt;li&gt;默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;.E5.90.AF.E5.8A.A8nginx&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;nbsp:478d349564ff1867135392f8c92ebb58&#34;&gt;&amp;nbsp;&lt;/h2&gt;

&lt;h2 id=&#34;span-启动nginx-span:478d349564ff1867135392f8c92ebb58&#34;&gt;&lt;span&gt;启动nginx&lt;/span&gt;&lt;/h2&gt;

&lt;pre&gt;sudo /etc/init.d/nginx start&lt;/pre&gt;

&lt;p&gt;然后就可以访问了，&lt;a href=&#34;http://localhost/&#34; title=&#34;http://localhost/&#34;&gt;http://localhost/&lt;/a&gt;&amp;nbsp;， 一切正常！如果不能访问，先不要继续，看看是什么原因，解决之后再继续。 （安装完后如出现403错误，那可能是nginx配置文件里的网站路径不正确）&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb new 安装最新的版本&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv 7F0CEB10&lt;/p&gt;

&lt;p&gt;添加下面的到 /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;deb &lt;a href=&#34;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&#34;&gt;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&lt;/a&gt; dist 10gen&lt;/p&gt;

&lt;p&gt;sudo apt-get update&amp;nbsp;&lt;/p&gt;

&lt;p&gt;sudo apt-get install mongodb-10gen&lt;/p&gt;

&lt;p&gt;改完配置文件后，对应的路径要设置权限&lt;/p&gt;

&lt;p&gt;chmod -R 777 /path&lt;/p&gt;

&lt;h1 id=&#34;mongod-dbpath-path-logpath-path-dblog-txt-logappend-directoryperdb-bind-ip-127-0-0-1-auth-master:478d349564ff1867135392f8c92ebb58&#34;&gt;mongod &amp;ndash;dbpath=/path &amp;ndash;logpath=/path/dblog.txt &amp;ndash;logappend &amp;ndash;directoryperdb &amp;ndash;bind_ip=127.0.0.1 &amp;ndash;auth &amp;ndash;master&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;启动 MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sudo /etc/init.d/mongodb start&lt;/p&gt;

&lt;p&gt;easy_install pymongo&lt;/p&gt;

&lt;div&gt;**&amp;nbsp;**&lt;/div&gt;
&lt;div&gt;**添加安全认证：**&lt;/div&gt;

&lt;p&gt;在admin数据库中使用&lt;strong&gt;db.addUser()&lt;/strong&gt;命令添加了管理员帐号，且使用&lt;strong&gt;&amp;ndash;auth&lt;/strong&gt;参数启动mongod
mongo.exe
use admin
db.addUser(&amp;lsquo;user1name&amp;rsquo;,&amp;lsquo;user1password&amp;rsquo;) #完全权限
db.addUser(&amp;lsquo;user2name&amp;rsquo;,&amp;lsquo;user2password&amp;rsquo;,True) #只读权限&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在Windows下安装为服务：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mongod.exe &amp;ndash;dbpath=c:\MongoDB.Data &amp;ndash;logpath=c:\MongoDB.Data\log.txt &amp;ndash;logappend &amp;ndash;directoryperdb &amp;ndash;auth &amp;ndash;install&amp;nbsp;&lt;/p&gt;

&lt;p&gt;禁用HTTP的端口&amp;nbsp;(localhost:28017) 使用参数&amp;nbsp;&amp;ndash;nohttpinterface
全部参数请参照这里&amp;nbsp;&lt;a href=&#34;http://www.mongodb.org/display/DOCS/Command+Line+Parameters&#34;&gt;http://www.mongodb.org/display/DOCS/Command+Line+Parameters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;启动服务：
net start &amp;ldquo;MongoDB&amp;rdquo;&lt;/p&gt;

&lt;p&gt;停止服务：
net stop &amp;ldquo;MongoDB&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装tornado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;easy_install tornado&lt;/p&gt;

&lt;p&gt;#tornado&lt;/p&gt;

&lt;p&gt;wget &lt;a href=&#34;http://github.com/downloads/facebook/tornado/tornado-2.1.1.tar.gz&#34;&gt;http://github.com/downloads/facebook/tornado/tornado-2.1.1.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tar xvzf tornado-2.1.1.tar.gz&lt;/p&gt;

&lt;p&gt;cd tornado-2.1.1&lt;/p&gt;

&lt;p&gt;python setup.py build&lt;/p&gt;

&lt;p&gt;sudo python setup.py install&lt;/p&gt;

&lt;p&gt;修改最大文件上传限制 tornado/iostream.py&amp;nbsp;&lt;/p&gt;

&lt;p&gt;原来&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;def &lt;strong&gt;init&lt;/strong&gt;(self, socket, io_loop=None, max_buffer_size=104857600,read_chunk_size=4096):&lt;/p&gt;

&lt;p&gt;改成&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;def &lt;strong&gt;init&lt;/strong&gt;(self, socket, io_loop=None, max_buffer_size=1024*1024*1024 , read_chunk_size=8192):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2013/03/13/2958224.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2013/03/13/2958224.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Android刷机备忘录</title>
            <link>http://kooksee.github.io/2011/03/06/flash-android/</link>
            <pubDate>Sun, 06 Mar 2011 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/2011/03/06/flash-android/</guid>
            <description>&lt;p&gt;G2 Magic上的Android1.6用了好久一直没去刷，直到今天早上实在忍不住刷到了Android2.2。刷之前在网上看了很多教程和注意事项，感觉好复杂，一步一步跟着做，最后发现其实并不复杂。需要特别注意的几点是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;找一个适合自己手机型号的、功能稳定、耗电量少的ROM。可到论坛上看看大家刷的评测，国内阿兴和蛋哥的评价还可以。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看ROM刷机的版本需要（SPL、Radio、Recovery的版本），比如：SPL1.33、Radio3.22、Recovery1.6.2。有一个一键转换工具&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=466183&amp;amp;amp;highlight=SPL&#34;&gt;RadioSwitchGUI&lt;/a&gt;很好用。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;满足了刷机需求，有一个合适的ROM版本，就可以开始刷了。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;备忘：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入fastboot模式的方法：关机状态下长按&lt;span style=&#34;color: red; &#34;&gt;返回键和关机键。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看SPL、Radio版本的方法：进入fastboot模式后有显示。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.&amp;nbsp;RadioSwitchGUI使用方法：PC上安装&lt;a href=&#34;http://java.com/zh_CN/download/&#34;&gt;Java&lt;/a&gt;环境，手机进入fastboot模式，连接USB数据线到PC，运行WinRun.bat。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;fastboot模式，接入USB后，安装驱动程序：Win7下我没找到合适的独立驱动程序，所以我安装了&lt;a href=&#34;http://www.htc.com/asia/SupportDownload.aspx?p_id=267&amp;amp;amp;cat=3&amp;amp;amp;dl_id=1073&#34;&gt;HTC Sync for all HTC Android Phones&lt;/a&gt;，内含驱动。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入recovery模式进行刷机：关机状态下长按&lt;span style=&#34;color: red; &#34;&gt;Home键和关机键&lt;/span&gt;。如果长按后出现一个叹号和手机图片，原因是recovery版本较旧，这时同时按接听和挂机键，然后再按Home键和关机键可进入recovery模式。如果出现这种情况，建议升级recovery到1.6.2。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入recovery模式后，先执行WIPE，把所有选项都WIPE一遍，然后进入flash zip from sdcard，按照说明的顺序开刷。比如，先ROM，然后PORT，然后google补丁包。（前提先将下载好的ROM、PORT、Google补丁包文件拷贝到SD卡的根目录）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;刷之前先备份联系人和短信。联系人可同步到Google。如果之前的版本是阿兴版，短信有备份还原功能，这个功能最好不要用，因为刷到2.2很可能没有备份还原功能，我就是这么悲剧。所以找个第三方的软件备份一下短信吧。比如91助手。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;名词解释：&amp;nbsp;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SPL： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 类似于PC的BIOS&lt;/p&gt;

&lt;p&gt;ROOT权限：刷SPL前必须获取的东西，一般也用不到（除官方rom外，大部分民间rom自带root）&lt;/p&gt;

&lt;p&gt;金卡： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;刷特定ROM要用到的东西，一般也用不到&lt;/p&gt;

&lt;p&gt;RADIO: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;无线通信模块，负责手机通讯的东西&lt;/p&gt;

&lt;p&gt;固件： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;目前分为1.5~1.6~2.0~2.2&lt;/p&gt;

&lt;p&gt;ROM： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 基于固件基础上的刷机包&lt;/p&gt;

&lt;p&gt;Recovery： 关机状态同时按挂机键+房子键，出来的界面就是recovery画面了。刷机、备份、恢复等都在此界面进行&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;只要动手刷过一次，就不会觉得麻烦了。本文只是介绍大致刷机方法，提供的链接并不适合所有时期和型号的手机。所以，重要的是掌握方法，以后直接到论坛找最新的合适的ROM刷，就不是什么难事了。&lt;/p&gt;

&lt;p&gt;不过还是要提醒一句：刷机有风险，动手请谨慎。刷前看清楚，否则成砖头。&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;p&gt;1.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=479391&amp;amp;amp;extra=page%3D1%26amp;filter%3Dtype%26amp;typeid%3D149&#34;&gt;HTC MAGIC(G2) 刷机教程！四步刷机！ 全新更新&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=466183&amp;amp;amp;highlight=SPL&#34;&gt;最好用的G2 32A SPL&amp;amp;Radio一键转换工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=616250&amp;amp;amp;extra=page%3D1%26amp;filter%3Dtype%26amp;typeid%3D211&#34;&gt;现今最完美2.2中文ROMS CM6.1RC1原版 加OC614 PORT 稳定 省电 快速 加入来电归属！&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2011/03/06/flash-android.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2011/03/06/flash-android.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>Google Test交流与测试开发经验总结</title>
            <link>http://kooksee.github.io/2010/12/31/testing-topic/</link>
            <pubDate>Fri, 31 Dec 2010 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/2010/12/31/testing-topic/</guid>
            <description>&lt;p&gt;昨天晚上做的一个讲座。想了很多，希望对这几年来的测试开发工作做一个总结。PPT花了一些心思，尽量做到配图，每个Slide尽量少的字，代码尽量的短，尽量把我以前遇到的问题，总结的内容都囊括进去。也是我做的最长的一个演示稿，一共56页。&lt;/p&gt;

&lt;p&gt;年底了，心情有些低落。讲座开始时，才发现今天还没开口说过两句话，再加上有点紧张，口干舌燥，讲的效果不是很好。如何让自己讲的东西变得生动，以及如何组织自己的语言，达到通顺和连贯，是我以后需要提高的。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;div style=&#34;width: 425px;&#34; id=&#34;__ss_6408876&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/coderzh/gtest-6408876&#34; title=&#34;GTest交流与经验总结&#34;&gt;GTest交流与经验总结&lt;/a&gt;&lt;/strong&gt;&lt;object id=&#34;__sse6408876&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=gtest-101230100842-phpapp01&amp;stripped_title=gtest-6408876&amp;userName=coderzh&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34;/&gt;&lt;param name=&#34;allowScriptAccess&#34; value=&#34;always&#34;/&gt;&lt;embed name=&#34;__sse6408876&#34; src=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=gtest-101230100842-phpapp01&amp;stripped_title=gtest-6408876&amp;userName=coderzh&#34; type=&#34;application/x-shockwave-flash&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style=&#34;padding: 5px 0pt 12px;&#34;&gt;View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/coderzh&#34;&gt;coderzh&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2010/12/31/testing-topic.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2010/12/31/testing-topic.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>技术文章 on 百里求一的博客</title>
    <link>http://kooksee.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/</link>
    <description>Recent content in 技术文章 on 百里求一的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 19 Mar 2016 15:05:47 +0800</lastBuildDate>
    <atom:link href="http://kooksee.github.io/categories/%E6%8A%80%E6%9C%AF%E6%96%87%E7%AB%A0/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>懒程序员和他的 dotfiles</title>
      <link>http://kooksee.github.io/post/2016/2016-03-19-dotfiles/</link>
      <pubDate>Sat, 19 Mar 2016 15:05:47 +0800</pubDate>
      
      <guid>http://kooksee.github.io/post/2016/2016-03-19-dotfiles/</guid>
      <description>

&lt;p&gt;如果你不知道什么是 dotfiles，那你就不会知道什么是 dotfiles。如果你知道什么是 dotfiles，那你就知道什么是 dotfiles。&lt;/p&gt;

&lt;p&gt;以一段废话开场，引出今天的主题：&lt;code&gt;dotfiles&lt;/code&gt;。软件匠艺社区（&lt;a href=&#34;codingstyle.cn&#34;&gt;codingstyle.cn&lt;/a&gt;）周三晚上有一期分享介绍 Vim 时提到了 dotfiles，这篇文章我们就来好好说一说 dotfiles。&lt;/p&gt;

&lt;h3 id=&#34;什么是-dotfiles:50fc662a6f6921bb445d80a429a8e146&#34;&gt;什么是 dotfiles？&lt;/h3&gt;

&lt;p&gt;dot 即「点」的意思，意思是以点开头的文件。如果你不是程序员，你大概会说，我咋从来没见过这种文件啊？因为这些文件通常都是隐藏文件，平常一般看不到，比如 .git 目录。但这里说的 dotfiles 主要是指用户 home 目录下的点文件，这类文件一般是一些配置文件，比如 vim 的配置文件 .vimrc，zsh 的配置文件 .zshrc 等。通过设置这些配置文件，可以实现出很强大的功能，比如有不少人通过配置 .vimrc，把 vim 活生生变成了一个功能强大的 IDE。还有一些偷懒的程序员在 .profile 之类的文件里设置了大量命令的 alias。以至于你还没看清楚他敲的第一个命令，他已经敲了三四个命令了。&lt;/p&gt;

&lt;p&gt;通过配置各种 dotfiles，程序员可以把系统定制得既顺手又高效。但是问题来了，自己千辛万苦调的设置，如果换一台机器，又得重新设置一遍。这对于追求效率的程序员来说是不可接受的。&lt;/p&gt;

&lt;h3 id=&#34;dotfiles-管理:50fc662a6f6921bb445d80a429a8e146&#34;&gt;dotfiles 管理&lt;/h3&gt;

&lt;p&gt;于是会玩又懒的程序员想出了一个办法，把所有的 dotfiles 放在一个单独的目录进行统一管理，放到 GitHub 或者通过网盘同步。&lt;/p&gt;

&lt;p&gt;为了让 dotfiles 生效，主要有两种方式：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;通过一个脚本，把所有 dotfile 文件 rsync 到 HOME 目录。&lt;/li&gt;
&lt;li&gt;使用软链，让 HOME 目录的 dotfile 文件指向你目录的 dotfile 文件。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;第一种方式适合机器初装，但是假如你有两台机器，希望配置能方便的进行同步，第二种方式是更好的选择。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ln -s ~/dotfiles/.vimrc ~/.vimrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但是，假如你的 dotfile 文件很多，手工去维护那些软链也是一件麻烦的事情。而程序员又是最不能忍受麻烦的，于是造了各种轮子去维护和管理这些 dotfiles 。&lt;/p&gt;

&lt;p&gt;有些人把软链的管理写成一个 Shell 脚本，也有人做成特定的工具。比如：&lt;a href=&#34;https://github.com/thoughtbot/rcm&#34;&gt;rcm&lt;/a&gt;、 &lt;a href=&#34;http://skwp.github.io/dotfiles/&#34;&gt;YARD&lt;/a&gt;、 &lt;a href=&#34;https://pypi.python.org/pypi/dotfiles&#34;&gt;dotfiles&lt;/a&gt;、 &lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;mackup&lt;/a&gt; ……&lt;/p&gt;

&lt;h3 id=&#34;mackup:50fc662a6f6921bb445d80a429a8e146&#34;&gt;mackup&lt;/h3&gt;

&lt;p&gt;在对比了各种 dotfiles 工具后，我最终选择了 &lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;mackup&lt;/a&gt;。理由主要如下：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;使用方便，配置起来非常简单。&lt;/li&gt;
&lt;li&gt;社区贡献了大量现成的软件的 dotfiles 配置，可以直接使用。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;在 OS X 下，可以直接使用 brew 安装 mackup。其他系统下，可以直接使用 pip 安装。安装好后，备份和还原都只需要一个命令：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 备份
$ mackup backup
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在新机器上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 还原
$ mackup restore
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你不想要那些软链了，只需要执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ mackup uninstall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mackup 可以通过配置文件，指定你希望备份哪些 dotfiles，以及备份到哪里（支持备份到 Dropbox、Google Drive、Copy、iCloud、Box 以及指定的目录。&lt;/p&gt;

&lt;p&gt;比如在我的 mac 上，我的 &lt;a href=&#34;https://github.com/coderzh/dotfiles/blob/master/home/.mackup.cfg&#34;&gt;.mackup.cfg&lt;/a&gt; 这样设置的：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[storage]
engine = file_system
path = dotfiles
directory = home

[applications_to_sync]
atom
pycharmce
myvim
ideaic15
zsh
mackup
dash
karabiner
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;storage&lt;/code&gt; 里指定了备份到文件系统的 ~/dotfiles/home 路径。&lt;code&gt;applications_to_sync&lt;/code&gt; 指定了备份哪些应用的 dotfiles。mackup 预先定义好了大量 application 的 dotfiles，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Atom
Bash
Dash
Emacs
Flux
Git
Gradle
MacOSX
MacVim
npm
Oh My Zsh
Vim
WebStorm
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;如果你需要定制某个 application 的 dotfiles 也很简单，比如我发现 mackup 自带的配置里没有 IntelliJ Community 版本的配置，我只需要在新建一个文件： ~/.mackup/ideaic15.cfg ：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ini&#34;&gt;[application]
name = My IntelliJ IDEA 15

[configuration_files]
Library/Preferences/IdeaIC15/keymaps/Mac OS X copy.xml
Library/Preferences/IdeaIC15/options/keymap.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;configuration_files&lt;/code&gt; 里指定我需要备份的文件即可。非常的简单易用。&lt;/p&gt;

&lt;h3 id=&#34;自动安装软件:50fc662a6f6921bb445d80a429a8e146&#34;&gt;自动安装软件&lt;/h3&gt;

&lt;p&gt;在一台新机器上，把之前机器装的软件一个一个手动安装也是非常耗时和麻烦的事情。如果你使用的是 Mac OS X，将会变得非常简单，因为绝大部分的软件开发包及软件都可以通过 &lt;a href=&#34;http://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; 和 &lt;a href=&#34;https://caskroom.github.io/&#34;&gt;brew cask&lt;/a&gt; 来安装。&lt;/p&gt;

&lt;p&gt;我的 Mac 上 99.9% 的软件，可以通过我写的 &lt;a href=&#34;https://github.com/coderzh/dotfiles/blob/master/install/brew.sh&#34;&gt;brew.sh&lt;/a&gt; 脚本来安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Install Homebrew

# Ask for the administrator password upfront.
sudo -v

# Keep-alive: update existing `sudo` time stamp until the script has finished.
while true; do sudo -n true; sleep 60; kill -0 &amp;quot;$$&amp;quot; || exit; done 2&amp;gt;/dev/null &amp;amp;

# Check for Homebrew,
# Install if we don&#39;t have it
if test ! $(which brew); then
  echo &amp;quot;Installing homebrew...&amp;quot;
  ruby -e &amp;quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;quot;
fi

brew tap homebrew/versions
brew update
brew upgrade --all

# Install packages
apps=(
    caskroom/cask/brew-cask
    cmake
    coreutils
    findutils
    git
    gnu-sed --with-default-names
    go
    hugo
    mercurial
    mackup
    macvim
    mysql
    android-platform-tools
    python
    ruby
    svn
    vim
    wget
    zsh
)

caskapps=(
    android-studio
    alfred
    atom
    cheatsheet
    dash
    genymotion
    google-chrome
    intellij-idea-ce
    iterm2
    java
    karabiner
    keepassx
    kindle
    macdown
    pomotodo
    pycharm-ce
    qq
    qqmusic
    qqmacmgr
    sogouinput
    thunder
    vagrant
    virtualbox
    vlc
    wiznote
    youdao
)

brew install &amp;quot;${apps[@]}&amp;quot;
brew tap caskroom/versions
brew cask update
brew cask install --appdir=&amp;quot;/Applications&amp;quot; &amp;quot;${caskapps[@]}&amp;quot;
brew cleanup
brew cask cleanup
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pip-npm-gem:50fc662a6f6921bb445d80a429a8e146&#34;&gt;pip、npm、gem&lt;/h3&gt;

&lt;p&gt;使用 pip、npm、gem 安装的包也使用脚本进行一键安装：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install --upgrade pip
pip install powerline-status
pip install MySQL-python
pip install tornado
pip install torndb
pip install pycrypto
pip install mock
# npm、gem ...
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;os-x-的系统设置:50fc662a6f6921bb445d80a429a8e146&#34;&gt;OS X 的系统设置&lt;/h3&gt;

&lt;p&gt;当你拿到一台新的 Mac 然后开机时，不知道有没有被 Duang~ 的一声吓到的经历。当时吓得的宝宝我赶紧找了如何关闭开机声音的方法（设置静音、插上耳机都不管用！），只要执行一条命令即可：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo nvram SystemAudioVolume=&amp;quot; &amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;很多的系统设置都可以通过命令来完成，比如：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# 电池显示是百分百
defaults write com.apple.menuextra.battery -bool true

# 设置键盘按键重复的延迟
defaults write NSGlobalDomain KeyRepeat -int 3

# 禁止自动拼写纠正
defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

# Finder 显示状态栏
defaults write com.apple.finder ShowStatusBar -bool true

# Finder 显示地址栏
defaults write com.apple.finder ShowPathbar -bool true

# 禁止在网络驱动器上生成 .DS_Store 文件
defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;字体:50fc662a6f6921bb445d80a429a8e146&#34;&gt;字体&lt;/h3&gt;

&lt;p&gt;程序员喜欢折腾的几样东西：键盘、编辑器、字体。程序员钟爱的几种字体，包括 Source Code Pro、Hack、Menlo 等等，其中对 powerline 字体更是最爱。把所有心爱的字体放在 dotfiles/fonts 目录里，通过自动安装脚本里直接拷贝到 ~/Library/Fonts/ 目录下即可。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -r ~/dotfiles/fonts/* ~/Library/Fonts/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用 powerline 字体需要安装 powerline-status，这个在前面讲的 pip 脚本里已经安装了。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install powerline-status
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;zsh 中使用 powerline 字体，只需要在 .zshrc 中加一句：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;source /usr/local/lib/python2.7/site-packages/powerline/bindings/zsh/powerline.zsh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/zsh-powerline.png&#34; alt=&#34;zsh-powerline&#34; /&gt;&lt;/p&gt;

&lt;p&gt;在 vim 里使用 powerline 字体，只需要在 .vimrc 里加：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;set rtp+=/usr/local/lib/python2.7/site-packages/powerline/bindings/vim
set laststatus=2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://7xlx3k.com1.z0.glb.clouddn.com/vim-powerline.png&#34; alt=&#34;vim-powerline&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;总结:50fc662a6f6921bb445d80a429a8e146&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;懒程序员如果拿到了一个新的 Mac 机器，他只需要做如下几步，就可以把这台新的机器变成熟悉的一台机器：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 XCode（最好在 Mac Store 里下载安装完整版的 XCode，因为有些软件安装依赖完整版 XCode）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo softwareupdate -i -a
$ xcode-select --install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;自动安装软件及系统设置。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd ~
$ git clone https://github.com/coderzh/dotfiles.git
$ source dotfiles/install.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用 mackup 恢复 dotfiles。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cp ~/dotfiles/.mackup.cfg ~/
$ cp -r ~/dotfiles/.mackup ~/
$ mackup restore
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;如果一切顺利，程序员，你没有浪费上班时间装电脑，你可以开始搬砖了。:-)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;（对了，iTerm2 的 Color 设置好像必须手工操作，配色列表可以在 &lt;a href=&#34;https://github.com/mbadolato/iTerm2-Color-Schemes&#34;&gt;https://github.com/mbadolato/iTerm2-Color-Schemes&lt;/a&gt; 找，作为 JetBrains 粉，最后我选择了 JetBrains Darcula.itermcolors 这一款。）&lt;/p&gt;

&lt;p&gt;在 GitHub 里搜 &lt;code&gt;dotfiles&lt;/code&gt; 可以看到大量的 dotfiles，当然，别忘了 Star 我的 dotfiles：&lt;a href=&#34;https://github.com/coderzh/dotfiles&#34;&gt;https://github.com/coderzh/dotfiles&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;最后，温馨提示下，千万不要把 ssh、mysql 密码相关的内容提交上去呦~&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mathiasbynens/dotfiles&#34;&gt;https://github.com/mathiasbynens/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/skwp/dotfiles&#34;&gt;https://github.com/skwp/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/donnemartin/dev-setup&#34;&gt;https://github.com/donnemartin/dev-setup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webpro/awesome-dotfiles&#34;&gt;https://github.com/webpro/awesome-dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jbernard/dotfiles&#34;&gt;https://github.com/jbernard/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/lra/mackup&#34;&gt;https://github.com/lra/mackup&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/webpro/dotfiles&#34;&gt;https://github.com/webpro/dotfiles&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>关于我</title>
      <link>http://kooksee.github.io/about/</link>
      <pubDate>Thu, 01 Jan 2015 08:55:31 +0800</pubDate>
      
      <guid>http://kooksee.github.io/about/</guid>
      <description>

&lt;p class=&#34;message&#34;&gt;
大家好，我叫百里，是一名程序员。
&lt;/p&gt;

&lt;h3 id=&#34;声明:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;声明&lt;/h3&gt;

&lt;p&gt;本博客所有文章皆为原创。转载请注明原文链接，并最好与本人联系。谢谢！&lt;/p&gt;

&lt;div id=&#34;footer&#34; &gt;

  {{ if .Site.Params.AuthorImg }}
  &lt;div class=&#34;line&#34;&gt;
    &lt;span&gt;&lt;/span&gt;
    &lt;div style=&#39;background:no-repeat url(&#34;{{ .Site.BaseURL }}{{ .Site.Params.AuthorImg }}&#34;) left top;-webkit-background-size:6.875em 6.875em;-moz-background-size:6.875em 6.875em;background-size:6.875em 6.875em;&#39; class=&#34;author&#34; &gt;&lt;/div&gt;
  &lt;/div&gt;
  {{ end }}


  &lt;div class=&#34;social-font clearfix&#34;&gt;
    {{ with .Site.Params.Weibo }}
    &lt;a href=&#34;http://weibo.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;weibo&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.Twitter }}
    &lt;a href=&#34;https://twitter.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;twitter&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.GitHub }}
    &lt;a href=&#34;https://github.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;github&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.Facebook }}
    &lt;a href=&#34;https://www.facebook.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;facebook&#34;&gt;&lt;/a&gt;
    {{ end }}
    {{ with .Site.Params.LinkIn }}
    &lt;a href=&#34;https://www.linkedin.com/{{ . }}&#34; target=&#34;_blank&#34; title=&#34;linkedin&#34;&gt;&lt;/a&gt;
    {{ end }}
  &lt;/div&gt;
  &lt;p class=&#34;copyright&#34;&gt;Powered by &lt;a href=&#34;http://gohugo.io&#34; target=&#34;_blank&#34; title=&#34;hugo&#34;&gt;hugo&lt;/a&gt; and Theme by &lt;a href=&#34;https://github.com/coderzh/hugo-pacman-theme&#34; target=&#34;_blank&#34; title=&#34;hugo-pacman-theme&#34;&gt;hugo-pacman-theme&lt;/a&gt; © {{ .Now.Year }}
    {{ if .Site.Author.Name }}
    &lt;a href=&#34;{{ .Site.BaseURL }}&#34; target=&#34;_blank&#34; title=&#34;{{ .Site.Author.Name }}&#34;&gt;{{ .Site.Author.Name }}&lt;/a&gt;
    {{ else }}
    &lt;a href=&#34;{{ .Site.BaseURL }}&#34; title=&#34;{{ .Site.Title }}&#34;&gt;{{ .Site.Title }}&lt;/a&gt;
    {{ end }}
  &lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>ViEmuVS2013-3.2.1 破解</title>
      <link>http://kooksee.github.io/post/cnblogs/2014-04-02-3640179/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>http://kooksee.github.io/post/cnblogs/2014-04-02-3640179/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://images.cnitblog.com/blog/16913/201404/020953210788248.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;VS升级到2013后，作为一个Vimer，自然需要更新最新的ViEmu插件，因为现在离了Vim，写代码已经寸步难行了。&lt;/p&gt;

&lt;p&gt;ViEmu 3.2.1的破解其实和Viemu 3.0.13的破解方法一样。安装前关闭VS，步骤：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;双击安装 ViEmuVS2013-3.2.1.vsix.&lt;/li&gt;
&lt;li&gt;在 C:\Users\Administrator\AppData\Local\Microsoft\VisualStudio\12.0.xtensions\ 文件夹下，找到 Viemu 的插件目录（目录下的文件名可以看出来）， 将 NGBridge.dll 覆盖。&lt;/li&gt;
&lt;li&gt;双击导入 viemuvs13.reg.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;另外，新版的ViEmu和VA(Visual Assist X)有冲突，弹不出代码提示。解决方法：&lt;/p&gt;

&lt;p&gt;将修改注册表中：
HKCU\Software\Whole Tomato\Visual Assist X\VANet12 的TrackCaretVisibility 改为 00 即可（改之前先关闭VS）&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://files.cnblogs.com/coderzh/Viemu3.2.1-%E7%A0%B4%E8%A7%A3%E5%AE%89%E8%A3%85%E5%8C%85.7z&#34;&gt;Viemu3.2.1-破解安装包.7z&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2014/04/02/3640179.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2014/04/02/3640179.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tornado</title>
      <link>http://kooksee.github.io/2013/03/13/2958224/</link>
      <pubDate>Wed, 13 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://kooksee.github.io/2013/03/13/2958224/</guid>
      <description>

&lt;p&gt;wget &lt;a href=&#34;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&#34;&gt;https://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg#md5=fe1f997bc722265116870bc7919059ea&lt;/a&gt;
sh setuptools_xxx.egg&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;MongoDB官网：&lt;a href=&#34;http://www.linuxidc.com/Linux/2012-08/linux.asp?url=http://www.mongodb.org/&#34;&gt;http://www.mongodb.org/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;如何在&amp;nbsp;&lt;a href=&#34;http://www.linuxidc.com/topicnews.aspx?tid=2&#34; title=&#34;Ubuntu&#34;&gt;Ubuntu&lt;/a&gt;&amp;nbsp;12.04 (Precise) Server 上安装 MongoDB&lt;/p&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv 7F0CEB10
echo &amp;ldquo;deb &lt;a href=&#34;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&#34;&gt;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&lt;/a&gt; dist 10gen&amp;rdquo; | tee -a /etc/apt/sources.list.d/10gen.list
sudo apt-get -y update&lt;/p&gt;

&lt;p&gt;sudo apt-get -y install mongodb-10gen&lt;/p&gt;

&lt;p&gt;配置文件：/etc/mongodb.conf&lt;/p&gt;

&lt;p&gt;对于基于Upstart的系统，控制脚本在/etc/init/mongodb.conf。&lt;/p&gt;

&lt;p&gt;默认数据文件目录：/var/lib/mongodb&lt;/p&gt;

&lt;p&gt;默认日志文件目录： /var/log/mongodb&lt;/p&gt;

&lt;p&gt;启动MongoDB:&amp;nbsp;&amp;nbsp; sudo service mongodb start&lt;/p&gt;

&lt;p&gt;sudo service mongodb stop&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 停止&lt;/p&gt;

&lt;p&gt;sudo service mongodb restart 重启&lt;/p&gt;

&lt;p&gt;测试：在终端上运行mongo打开mongo shell&lt;/p&gt;

&lt;h1 id=&#34;mongo:478d349564ff1867135392f8c92ebb58&#34;&gt;mongo&lt;/h1&gt;

&lt;p&gt;MongoDB shell version: 2.0.7
connecting to: test&lt;/p&gt;

&lt;p&gt;&amp;gt; db.test.save({a:1})
&amp;gt; db.test.find()
{ &amp;ldquo;_id&amp;rdquo; : ObjectId(&amp;ldquo;502b284cd9de55a0e9ca86d9&amp;Prime;), &amp;ldquo;a&amp;rdquo; : 1 }&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;h2 id=&#34;span-安装nginx-span:478d349564ff1867135392f8c92ebb58&#34;&gt;&lt;span&gt;安装nginx&lt;/span&gt;&lt;/h2&gt;

&lt;pre&gt;sudo apt-get install nginx&lt;/pre&gt;

&lt;p&gt;Ubuntu安装之后的文件结构大致为：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;所有的配置文件都在/etc/nginx下，并且每个虚拟主机已经安排在了/etc/nginx/sites-available下&lt;/li&gt;
&lt;li&gt;程序文件在/usr/sbin/nginx&lt;/li&gt;
&lt;li&gt;日志放在了/var/log/nginx中&lt;/li&gt;
&lt;li&gt;并已经在/etc/init.d/下创建了启动脚本nginx&lt;/li&gt;
&lt;li&gt;默认的虚拟主机的目录设置在了/var/www/nginx-default (有的版本 默认的虚拟主机的目录设置在了/var/www, 请参考/etc/nginx/sites-available里的配置)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;.E5.90.AF.E5.8A.A8nginx&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;nbsp:478d349564ff1867135392f8c92ebb58&#34;&gt;&amp;nbsp;&lt;/h2&gt;

&lt;h2 id=&#34;span-启动nginx-span:478d349564ff1867135392f8c92ebb58&#34;&gt;&lt;span&gt;启动nginx&lt;/span&gt;&lt;/h2&gt;

&lt;pre&gt;sudo /etc/init.d/nginx start&lt;/pre&gt;

&lt;p&gt;然后就可以访问了，&lt;a href=&#34;http://localhost/&#34; title=&#34;http://localhost/&#34;&gt;http://localhost/&lt;/a&gt;&amp;nbsp;， 一切正常！如果不能访问，先不要继续，看看是什么原因，解决之后再继续。 （安装完后如出现403错误，那可能是nginx配置文件里的网站路径不正确）&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mongodb new 安装最新的版本&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sudo apt-key adv &amp;ndash;keyserver keyserver.ubuntu.com &amp;ndash;recv 7F0CEB10&lt;/p&gt;

&lt;p&gt;添加下面的到 /etc/apt/sources.list&lt;/p&gt;

&lt;p&gt;deb &lt;a href=&#34;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&#34;&gt;http://downloads-distro.mongodb.org/repo/ubuntu-upstart&lt;/a&gt; dist 10gen&lt;/p&gt;

&lt;p&gt;sudo apt-get update&amp;nbsp;&lt;/p&gt;

&lt;p&gt;sudo apt-get install mongodb-10gen&lt;/p&gt;

&lt;p&gt;改完配置文件后，对应的路径要设置权限&lt;/p&gt;

&lt;p&gt;chmod -R 777 /path&lt;/p&gt;

&lt;h1 id=&#34;mongod-dbpath-path-logpath-path-dblog-txt-logappend-directoryperdb-bind-ip-127-0-0-1-auth-master:478d349564ff1867135392f8c92ebb58&#34;&gt;mongod &amp;ndash;dbpath=/path &amp;ndash;logpath=/path/dblog.txt &amp;ndash;logappend &amp;ndash;directoryperdb &amp;ndash;bind_ip=127.0.0.1 &amp;ndash;auth &amp;ndash;master&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;启动 MongoDB&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;sudo /etc/init.d/mongodb start&lt;/p&gt;

&lt;p&gt;easy_install pymongo&lt;/p&gt;

&lt;div&gt;**&amp;nbsp;**&lt;/div&gt;
&lt;div&gt;**添加安全认证：**&lt;/div&gt;

&lt;p&gt;在admin数据库中使用&lt;strong&gt;db.addUser()&lt;/strong&gt;命令添加了管理员帐号，且使用&lt;strong&gt;&amp;ndash;auth&lt;/strong&gt;参数启动mongod
mongo.exe
use admin
db.addUser(&amp;lsquo;user1name&amp;rsquo;,&amp;lsquo;user1password&amp;rsquo;) #完全权限
db.addUser(&amp;lsquo;user2name&amp;rsquo;,&amp;lsquo;user2password&amp;rsquo;,True) #只读权限&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;在Windows下安装为服务：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;mongod.exe &amp;ndash;dbpath=c:\MongoDB.Data &amp;ndash;logpath=c:\MongoDB.Data\log.txt &amp;ndash;logappend &amp;ndash;directoryperdb &amp;ndash;auth &amp;ndash;install&amp;nbsp;&lt;/p&gt;

&lt;p&gt;禁用HTTP的端口&amp;nbsp;(localhost:28017) 使用参数&amp;nbsp;&amp;ndash;nohttpinterface
全部参数请参照这里&amp;nbsp;&lt;a href=&#34;http://www.mongodb.org/display/DOCS/Command+Line+Parameters&#34;&gt;http://www.mongodb.org/display/DOCS/Command+Line+Parameters&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;启动服务：
net start &amp;ldquo;MongoDB&amp;rdquo;&lt;/p&gt;

&lt;p&gt;停止服务：
net stop &amp;ldquo;MongoDB&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;安装tornado&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;easy_install tornado&lt;/p&gt;

&lt;p&gt;#tornado&lt;/p&gt;

&lt;p&gt;wget &lt;a href=&#34;http://github.com/downloads/facebook/tornado/tornado-2.1.1.tar.gz&#34;&gt;http://github.com/downloads/facebook/tornado/tornado-2.1.1.tar.gz&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tar xvzf tornado-2.1.1.tar.gz&lt;/p&gt;

&lt;p&gt;cd tornado-2.1.1&lt;/p&gt;

&lt;p&gt;python setup.py build&lt;/p&gt;

&lt;p&gt;sudo python setup.py install&lt;/p&gt;

&lt;p&gt;修改最大文件上传限制 tornado/iostream.py&amp;nbsp;&lt;/p&gt;

&lt;p&gt;原来&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;def &lt;strong&gt;init&lt;/strong&gt;(self, socket, io_loop=None, max_buffer_size=104857600,read_chunk_size=4096):&lt;/p&gt;

&lt;p&gt;改成&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;def &lt;strong&gt;init&lt;/strong&gt;(self, socket, io_loop=None, max_buffer_size=1024*1024*1024 , read_chunk_size=8192):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2013/03/13/2958224.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2013/03/13/2958224.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Android刷机备忘录</title>
      <link>http://kooksee.github.io/2011/03/06/flash-android/</link>
      <pubDate>Sun, 06 Mar 2011 00:00:00 +0000</pubDate>
      
      <guid>http://kooksee.github.io/2011/03/06/flash-android/</guid>
      <description>&lt;p&gt;G2 Magic上的Android1.6用了好久一直没去刷，直到今天早上实在忍不住刷到了Android2.2。刷之前在网上看了很多教程和注意事项，感觉好复杂，一步一步跟着做，最后发现其实并不复杂。需要特别注意的几点是：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;找一个适合自己手机型号的、功能稳定、耗电量少的ROM。可到论坛上看看大家刷的评测，国内阿兴和蛋哥的评价还可以。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看ROM刷机的版本需要（SPL、Radio、Recovery的版本），比如：SPL1.33、Radio3.22、Recovery1.6.2。有一个一键转换工具&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=466183&amp;amp;amp;highlight=SPL&#34;&gt;RadioSwitchGUI&lt;/a&gt;很好用。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;满足了刷机需求，有一个合适的ROM版本，就可以开始刷了。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;备忘：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;进入fastboot模式的方法：关机状态下长按&lt;span style=&#34;color: red; &#34;&gt;返回键和关机键。&lt;/span&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看SPL、Radio版本的方法：进入fastboot模式后有显示。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;3.&amp;nbsp;RadioSwitchGUI使用方法：PC上安装&lt;a href=&#34;http://java.com/zh_CN/download/&#34;&gt;Java&lt;/a&gt;环境，手机进入fastboot模式，连接USB数据线到PC，运行WinRun.bat。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;fastboot模式，接入USB后，安装驱动程序：Win7下我没找到合适的独立驱动程序，所以我安装了&lt;a href=&#34;http://www.htc.com/asia/SupportDownload.aspx?p_id=267&amp;amp;amp;cat=3&amp;amp;amp;dl_id=1073&#34;&gt;HTC Sync for all HTC Android Phones&lt;/a&gt;，内含驱动。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入recovery模式进行刷机：关机状态下长按&lt;span style=&#34;color: red; &#34;&gt;Home键和关机键&lt;/span&gt;。如果长按后出现一个叹号和手机图片，原因是recovery版本较旧，这时同时按接听和挂机键，然后再按Home键和关机键可进入recovery模式。如果出现这种情况，建议升级recovery到1.6.2。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;进入recovery模式后，先执行WIPE，把所有选项都WIPE一遍，然后进入flash zip from sdcard，按照说明的顺序开刷。比如，先ROM，然后PORT，然后google补丁包。（前提先将下载好的ROM、PORT、Google补丁包文件拷贝到SD卡的根目录）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;刷之前先备份联系人和短信。联系人可同步到Google。如果之前的版本是阿兴版，短信有备份还原功能，这个功能最好不要用，因为刷到2.2很可能没有备份还原功能，我就是这么悲剧。所以找个第三方的软件备份一下短信吧。比如91助手。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;名词解释：&amp;nbsp;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;SPL： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 类似于PC的BIOS&lt;/p&gt;

&lt;p&gt;ROOT权限：刷SPL前必须获取的东西，一般也用不到（除官方rom外，大部分民间rom自带root）&lt;/p&gt;

&lt;p&gt;金卡： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;刷特定ROM要用到的东西，一般也用不到&lt;/p&gt;

&lt;p&gt;RADIO: &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;无线通信模块，负责手机通讯的东西&lt;/p&gt;

&lt;p&gt;固件： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;目前分为1.5~1.6~2.0~2.2&lt;/p&gt;

&lt;p&gt;ROM： &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 基于固件基础上的刷机包&lt;/p&gt;

&lt;p&gt;Recovery： 关机状态同时按挂机键+房子键，出来的界面就是recovery画面了。刷机、备份、恢复等都在此界面进行&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;只要动手刷过一次，就不会觉得麻烦了。本文只是介绍大致刷机方法，提供的链接并不适合所有时期和型号的手机。所以，重要的是掌握方法，以后直接到论坛找最新的合适的ROM刷，就不是什么难事了。&lt;/p&gt;

&lt;p&gt;不过还是要提醒一句：刷机有风险，动手请谨慎。刷前看清楚，否则成砖头。&lt;/p&gt;

&lt;p&gt;参考资料：&lt;/p&gt;

&lt;p&gt;1.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=479391&amp;amp;amp;extra=page%3D1%26amp;filter%3Dtype%26amp;typeid%3D149&#34;&gt;HTC MAGIC(G2) 刷机教程！四步刷机！ 全新更新&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;2.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=466183&amp;amp;amp;highlight=SPL&#34;&gt;最好用的G2 32A SPL&amp;amp;Radio一键转换工具&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;3.&amp;nbsp;&lt;a href=&#34;http://www.hiapk.com/bbs/viewthread.php?tid=616250&amp;amp;amp;extra=page%3D1%26amp;filter%3Dtype%26amp;typeid%3D211&#34;&gt;现今最完美2.2中文ROMS CM6.1RC1原版 加OC614 PORT 稳定 省电 快速 加入来电归属！&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2011/03/06/flash-android.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2011/03/06/flash-android.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Test交流与测试开发经验总结</title>
      <link>http://kooksee.github.io/2010/12/31/testing-topic/</link>
      <pubDate>Fri, 31 Dec 2010 00:00:00 +0000</pubDate>
      
      <guid>http://kooksee.github.io/2010/12/31/testing-topic/</guid>
      <description>&lt;p&gt;昨天晚上做的一个讲座。想了很多，希望对这几年来的测试开发工作做一个总结。PPT花了一些心思，尽量做到配图，每个Slide尽量少的字，代码尽量的短，尽量把我以前遇到的问题，总结的内容都囊括进去。也是我做的最长的一个演示稿，一共56页。&lt;/p&gt;

&lt;p&gt;年底了，心情有些低落。讲座开始时，才发现今天还没开口说过两句话，再加上有点紧张，口干舌燥，讲的效果不是很好。如何让自己讲的东西变得生动，以及如何组织自己的语言，达到通顺和连贯，是我以后需要提高的。&lt;/p&gt;

&lt;p&gt;&amp;nbsp;
&lt;div style=&#34;width: 425px;&#34; id=&#34;__ss_6408876&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/coderzh/gtest-6408876&#34; title=&#34;GTest交流与经验总结&#34;&gt;GTest交流与经验总结&lt;/a&gt;&lt;/strong&gt;&lt;object id=&#34;__sse6408876&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=gtest-101230100842-phpapp01&amp;stripped_title=gtest-6408876&amp;userName=coderzh&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34;/&gt;&lt;param name=&#34;allowScriptAccess&#34; value=&#34;always&#34;/&gt;&lt;embed name=&#34;__sse6408876&#34; src=&#34;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=gtest-101230100842-phpapp01&amp;stripped_title=gtest-6408876&amp;userName=coderzh&#34; type=&#34;application/x-shockwave-flash&#34; allowscriptaccess=&#34;always&#34; allowfullscreen=&#34;true&#34; width=&#34;425&#34; height=&#34;355&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style=&#34;padding: 5px 0pt 12px;&#34;&gt;View more &lt;a href=&#34;http://www.slideshare.net/&#34;&gt;presentations&lt;/a&gt; from &lt;a href=&#34;http://www.slideshare.net/coderzh&#34;&gt;coderzh&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;&amp;nbsp;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[温馨提示]：该文章由原博客园导入而来，如排版效果不佳，请移步：&lt;a href=&#34;http://www.cnblogs.com/coderzh/archive/2010/12/31/testing-topic.html&#34;&gt;http://www.cnblogs.com/coderzh/archive/2010/12/31/testing-topic.html&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
