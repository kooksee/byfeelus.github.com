<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Ubuntu on 百里求一的博客</title>
        <link>http://kooksee.github.io/tags/ubuntu/</link>
        <language>zh-CN</language>
        <author>CoderZh</author>
        <rights>Copyright (c) 2015, CoderZh; all rights reserved.</rights>
        <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
        
        <item>
            <title>ubuntu 下载器</title>
            <link>http://kooksee.github.io/blog/ubuntu%20%E4%B8%8B%E8%BD%BD%E5%99%A8/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/blog/ubuntu%20%E4%B8%8B%E8%BD%BD%E5%99%A8/</guid>
            <description>&lt;p&gt;&lt;a href=&#34;http://man.chinaunix.net/&#34;&gt;http://man.chinaunix.net/&lt;/a&gt;
&lt;a href=&#34;http://philo.top/2015/12/13/golang-devenv/&#34;&gt;http://philo.top/2015/12/13/golang-devenv/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Wget还可下载整个网站，如下载&lt;a href=&#34;http://man.chinaunix.net整个Man手册中心。只需输入如下命令即可：&#34;&gt;http://man.chinaunix.net整个Man手册中心。只需输入如下命令即可：&lt;/a&gt; #wget -r -p -np -k &lt;a href=&#34;http://man.chinaunix.net&#34;&gt;http://man.chinaunix.net&lt;/a&gt; 其中-r参数是指使用递归下载，-p是指下载所有显示完整网页所以需要的文件，如图片等，-np是指不搜索上层目录，-k则是指将绝对链接转换为相对链接。&lt;/p&gt;

&lt;p&gt;Downloader for X     Downloader For X（文中简称为D4X）是Linux下功能强大的图形化下载工具。支持HTTP与FTP协议，具有类似NetAnt和FlashGet等多线程、断点续传下载等功能。D4X还具有连接超时断点续传、记录下载日志、模拟下载、链接拖拽下载、自动复制剪贴板链接到下载地址栏中等功能。 1.下载和安装 D4X的下载地址为&lt;a href=&#34;http://www.krasu.ru/soft/chuchelo/files/d4x-2.5.0final.tar.gz，下载后使用如下命令安装：&#34;&gt;http://www.krasu.ru/soft/chuchelo/files/d4x-2.5.0final.tar.gz，下载后使用如下命令安装：&lt;/a&gt; #tar zxvf d4x-2.5.0final.tar.gz #cd d4x-2.5.0final #./configure #make #make install 成功安装后，运行“d4x”命令便可直接运行。它的界面如图3所示，和FlashGet有点相像吧。  in ubuntu just : apt-get install d4x&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>ubuntu 搭建 OPENVPN</title>
            <link>http://kooksee.github.io/blog/ubuntu%20%E6%90%AD%E5%BB%BA%20OPENVPN/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/blog/ubuntu%20%E6%90%AD%E5%BB%BA%20OPENVPN/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;配置OpenVPN的步骤，大致包括两部分，首先是服务器端的OpenVPN服务，其次是客户端的OpenVPN软件。首先我们在Ubuntu 10.04 TLS上配置OpenVPN服务器端。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##配置OpenVPN服务器
首先请使用root账户登录系统，若没有开启root，请使用sudo暂转为root模式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;从软件仓库安装openvpn及其相关软件包：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;apt-get install openvpn udev lzop -y
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完成安装后，复制证书配置模板信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cp -r /usr/share/doc/openvpn/examples/easy-rsa/ /etc/openvpn/
cd /etc/openvpn/easy-rsa/2.0/
source vars
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;先清除已有的证书信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./clean-all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建CA根证书：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#./build-ca
Generating a 1024 bit RSA private key
................++++++
........++++++
writing new private key to &#39;ca.key&#39;
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &#39;.&#39;, the field will be left blank.
-----
Country Name (2 letter code) [CN]:
State or Province Name (full name) [GD]:
Locality Name (eg, city) [SZ]:
Organization Name (eg, company) []:
Organizational Unit Name (eg, section) []:soa
Common Name (eg, your name or your server&#39;s hostname) []:starlight36.com
Email Address [your-email [at] starlight36.com]:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建服务器端key：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#./build-key-server server
Generating a 1024 bit RSA private key
......++++++
....................++++++
writing new private key to &#39;server.key&#39;
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &#39;.&#39;, the field will be left blank.
-----
Country Name (2 letter code) [CN]:
State or Province Name (full name) [LN]:
Locality Name (eg, city) [DL]:
Organization Name (eg, company) [starlight36.com]:
Organizational Unit Name (eg, section) []:starlight36.com
Common Name (eg, your name or your server&#39;s hostname) []:server
Email Address [your-email [at] starlight36.com]:
... ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建客户端key&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#./build-key client
Generating a 1024 bit RSA private key
......++++++
....................++++++
writing new private key to &#39;server.key&#39;
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &#39;.&#39;, the field will be left blank.
-----
Country Name (2 letter code) [CN]:
State or Province Name (full name) [LN]:
Locality Name (eg, city) [DL]:
Organization Name (eg, company) [starlight36.com]:
Organizational Unit Name (eg, section) []:starlight36.com
Common Name (eg, your name or your server&#39;s hostname) []:client
Email Address [your-email [at] starlight36.com]:
... ...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;过程和创建服务器端Key基本一致，但是需要注意的是，Common Name (eg, your name or your server’s hostname)这一项每个客户端key之间不能重名，和server key的设置也不能重名，否则会导致生成失败。&lt;/p&gt;

&lt;p&gt;生成 Diffie Hellman信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./build-dh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这时，服务器证书的配置就完成了，我们需要把服务器上刚才生成的ca.crt client.crt client.key三个文件下载下来，客户端连接时需要用到。&lt;/p&gt;

&lt;p&gt;继续配置服务器端OpenVPN配置文件：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#vi /etc/openvpn/server.conf
local 【服务器IP】
port 【服务端口】
proto udp
dev tun
ca /etc/openvpn/easy-rsa/2.0/keys/ca.crt
cert /etc/openvpn/easy-rsa/2.0/keys/server.crt
key /etc/openvpn/easy-rsa/2.0/keys/server.key
dh /etc/openvpn/easy-rsa/2.0/keys/dh1024.pem
ifconfig-pool-persist ipp.txt
server 10.168.1.0 255.255.255.0
push &amp;quot;redirect-gateway&amp;quot;
push &amp;quot;dhcp-option DNS 8.8.8.8&amp;quot;
push &amp;quot;dhcp-option DNS 8.8.4.4&amp;quot;
client-to-client
duplicate-cn
keepalive 10 60
comp-lzo
max-clients 10
persist-key
persist-tun
status openvpn-status.log
log-append openvpn.log
verb 3
mute 20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对iptables进行设置，进行nat转发：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;iptables -t nat -A POSTROUTING -s 10.168.0.0/16 -o venet0 -j SNAT --to 【外网出口IP】
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存到iptables表中：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; iptables-save &amp;gt; /etc/iptables.rules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;添加配置，让网卡启动时自动加载规则：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#vi /etc/network/if-up.d/iptables
#!/bin/sh
iptables-restore &amp;lt; /etc/iptables.rules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;为脚本增加执行权限：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;chmod +x /etc/network/if-up.d/iptables
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;增加内核配置信息：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#vi /etc/sysctl.conf
net.ipv4.ip_forward = 1
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;立即生效配置：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sysctl -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;启动VPN服务并重启网络：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/openvpn restart
/etc/init.d/networking restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;若启动服务失败，请查看日志/etc/openvpn/openvpn.log。&lt;/p&gt;

&lt;p&gt;对于VPS而言，若出现Cannot allocate TUN/TAP dev dynamically的错误，请联系你的空间商，让其为你开启TUN支持。当然有些VPS空间商是不支持这个的。貌似Godaddy的就不支持。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;配置OpenVPN客户端（Windows下）
首先，请先下载Windows下的最新版本的OpenVPN客户端：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://swupdate.openvpn.org/community/releases/openvpn-2.2.2-install.exe&#34;&gt;http://swupdate.openvpn.org/community/releases/openvpn-2.2.2-install.exe&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;运行并安装，默认选项即可，若安装有困难，请参考这篇文章：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vpn5201.com/setup/windows-7/openvpn.php&#34;&gt;http://vpn5201.com/setup/windows-7/openvpn.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;将刚才保存到本地的ca.crt client.crt client.key三个文件，丢进OpenVPN安装目录下的config文件夹中，默认安装路径为：C:\Program Files\OpenVPN（x64系统下为C:\Program Files (x86)\OpenVPN）。&lt;/p&gt;

&lt;p&gt;在config文件夹中创建一个连接服务器的配置文件，扩展名为.ovpn：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;client
dev tun
proto udp
remote 【OpenVPN服务器IP】 【服务端口】
resolv-retry infinite
nobind
persist-key
persist-tun
ca ca.crt
cert client.crt
key client.key
ns-cert-type server
redirect-gateway
keepalive 20 60
#tls-auth ta.key 1
comp-lzo
verb 3
mute 20
route-method exe
route-delay 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在开始菜单启动OpenVPN，这时可以在系统托盘中看到图标，右键选择Connect，即可开始连接，不出以外，你可以正常连上了。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;安卓Android使用OpenVPN
由于Android也使用Linux内核，所以原则上它也是可以使用OpenVPN的。在Android上使用OpenVPN，请安装OpenVPN-Setting，下载地址请见：&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&#34;http://code.google.com/p/android-openvpn-settings/downloads/list&#34;&gt;http://code.google.com/p/android-openvpn-settings/downloads/list&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装了客户端之后，在sd卡目录下新建一个openvpn，将PC客户端上的证书和配置文件（config文件夹下的东西）拷贝过来，运行OpenVPN Settings即可。&lt;/p&gt;

&lt;p&gt;参考文章：&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://hi.baidu.com/gaolongquan/blog/item/57cad955a23e18deb645ae5a.html&#34;&gt;http://hi.baidu.com/gaolongquan/blog/item/57cad955a23e18deb645ae5a.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.xiaohui.com/dev/server/20070514-install-openvpn.htm&#34;&gt;http://www.xiaohui.com/dev/server/20070514-install-openvpn.htm&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://vpn5201.com/setup/windows-7/openvpn.php&#34;&gt;http://vpn5201.com/setup/windows-7/openvpn.php&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;转：&lt;a href=&#34;http://starlight36.com/post/ubuntu-openvpn-server-install&#34;&gt;http://starlight36.com/post/ubuntu-openvpn-server-install&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        
        <item>
            <title>ubuntu内核升级</title>
            <link>http://kooksee.github.io/blog/ubuntu%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/blog/ubuntu%E5%86%85%E6%A0%B8%E5%8D%87%E7%BA%A7/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;本来想学习docker，可是人家对内核有要求，所以就查些资料升级一下ubuntu内核&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;内核下载
下载地址：&lt;a href=&#34;http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.1-rc2-vivid/&#34;&gt;http://kernel.ubuntu.com/~kernel-ppa/mainline/v4.1-rc2-vivid/&lt;/a&gt;
下载文件名：
linux-headers-4.1.0-040100rc2_4.1.0-040100rc2.201505032335_all.deb；
linux-headers-4.1.0-040100rc2-generic_4.1.0-040100rc2.201505032335_amd64.deb；
linux-image-4.1.0-040100rc2-generic_4.1.0-040100rc2.201505032335_amd64.deb&lt;/li&gt;
&lt;li&gt;安装内核
在ubuntu下面，一切都很方便
按照上面下载的文件顺序依次安装即可&lt;/li&gt;
&lt;li&gt;重启电脑选择内核
reboot你的ubuntu，然后进入选择界面选择高级选项，选择内核为高版本即可&lt;/li&gt;
&lt;li&gt;用命令查看内核
uname -a
&amp;gt; Linux byfeelus 4.1.0-040100rc2-generic #201505032335 SMP Mon May 4 03:36:35 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
        <item>
            <title>我的linux操作习惯</title>
            <link>http://kooksee.github.io/blog/%E6%88%91%E7%9A%84linux%E6%93%8D%E4%BD%9C%E4%B9%A0%E6%83%AF/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/blog/%E6%88%91%E7%9A%84linux%E6%93%8D%E4%BD%9C%E4%B9%A0%E6%83%AF/</guid>
            <description>&lt;blockquote&gt;
&lt;p&gt;用linux随时可能会有宕机的危险，谁知道我哪会神经病犯了呢。用deepin宕机的可能性会更高的，所以我才不得不安装一个windows做备份，然后把数据备份到windows上面&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;##备份源列表&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##添加ubuntu的阿里软件源&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;deb http://mirrors.aliyun.com/ubuntu/ vivid main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ vivid-security main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ vivid-updates main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ vivid-proposed main restricted universe multiverse
deb http://mirrors.aliyun.com/ubuntu/ vivid-backports main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ vivid main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ vivid-security main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ vivid-updates main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ vivid-proposed main restricted universe multiverse
deb-src http://mirrors.aliyun.com/ubuntu/ vivid-backports main restricted universe multiverse

sudo cat ./tools/ali.list &amp;gt;&amp;gt; /etc/apt/source.list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##更新系统&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install aptitude
sudo aptitude update &amp;amp;&amp;amp; sudo aptitude upgrade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##安装系统相关工具&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aptitude install aptitude
sudo aptitude install git openssh openssh-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##安装java环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aptitude install openjdk-8-jdk
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;http://seisman.info/python-pyenv.html&#34;&gt;安装pyenv&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://github.com/yyuu/pyenv.git ~/.pyenv
echo &#39;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;eval &amp;quot;$(pyenv init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
exec $SHELL -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##安装python环境&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pyenv install anaconda2-2.4.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;https://github.com/yyuu/pyenv-virtualenvwrapper&#34;&gt;安装python虚拟环境virtualenvwrapper&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/yyuu/pyenv-virtualenvwrapper.git ~/.pyenv/plugins/pyenv-virtualenvwrapper

pyenv virtualenvwrapper
export PYENV_VIRTUALENVWRAPPER_PREFER_PYVENV=&amp;quot;true&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;http://www.philo.top/2015/02/06/golang-%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%BB%BA%E8%AE%AE/&#34;&gt;安装golang&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aptitude install golang

#配置环境
export GOROOT=/usr/lib/go
export GOARCH=amd64
export GOOS=linux
export GOPATH=$HOME/go
export GOBIN=$GOPATH/bin
export PATH=$GOPATH/bin:$GOROOT/bin:$PATH

mkdir -p ~/go/{bin,pkg,src}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;http://www.linuxidc.com/Linux/2014-08/105656.htm&#34;&gt;安装docker&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo aptitude install apt-transport-https

sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 36A1D7869245C8950F966E92D8576A8BA88D21E9

sudo sh -c &amp;quot;echo deb https://get.docker.io/ubuntu docker main &amp;gt; /etc/apt/sources.list.d/docker.list&amp;quot;

sudo aptitude update
sudo aptitude install lxc-docker
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##docker免sudo操作&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo usermod -aG docker ubuntu

sudo groupadd docker
sudo gpasswd -a ${USER} docker
sudo service docker restart

#需要注销或者重启一下电脑
#然后查看一下服务是否开启
ps -ef | grep docker
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;curl -L https://github.com/docker/machine/releases/download/v0.5.3/docker-machine_linux-amd64 &amp;gt;/usr/local/bin/docker-machine &amp;amp;&amp;amp; \
    chmod +x /usr/local/bin/docker-machine

curl -L https://github.com/docker/compose/releases/download/1.5.2/docker-compose-`uname -s`-`uname -m` &amp;gt; /usr/local/bin/docker-compose
pip install docker-compose

curl -L https://github.com/docker/compose/releases/download/1.5.2/run.sh &amp;gt; /usr/local/bin/docker-compose



&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;https://hub.tenxcloud.com/&#34;&gt;登陆时速云下载镜像&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;docker login index.tenxcloud.com

docker pull
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##&lt;a href=&#34;http://blog.csdn.net/pfanaya/article/details/7665853&#34;&gt;剪贴板操作工具&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#安装
sudo aptitude install xclip

alias tclip=&#39;xclip -selection clipboard&#39;
alias fclip=&#39;xclip -selection c -o&#39;

#复制到剪贴板
ctrl+c
or
ls | tclip
or
tclip &amp;lt; file.txt

#复制到其他地方
ctrl+v
or
tclip
or
tclip | wc
or
tclip &amp;gt; file.txt

#然后保存到.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##sublime配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#deepin安装sublime
sudo apt-get install sublime-text
sudo cp /usr/bin/sublime-text /usr/bin/subl

import urllib2,os;pf=&#39;Package Control.sublime-package&#39;;ipp=sublime.installed_packages_path();os.makedirs(ipp) if not os.path.exists(ipp) else None;open(os.path.join(ipp,pf),&#39;wb&#39;).write(urllib2.urlopen(&#39;http://sublime.wbond.net/&#39;+pf.replace(&#39; &#39;,&#39;%20&#39;)).read())

&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
