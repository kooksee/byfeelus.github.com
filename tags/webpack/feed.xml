<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Webpack on 百里求一的博客</title>
        <link>http://kooksee.github.io/tags/webpack/</link>
        <language>zh-CN</language>
        <author>CoderZh</author>
        <rights>Copyright (c) 2015, CoderZh; all rights reserved.</rights>
        <updated>Mon, 01 Jan 0001 00:00:00 UTC</updated>
        
        <item>
            <title>webpack配置</title>
            <link>http://kooksee.github.io/blog/webpack%E9%85%8D%E7%BD%AE/</link>
            <pubDate>Mon, 01 Jan 0001 00:00:00 UTC</pubDate>
            <author>CoderZh</author>
            <guid>http://kooksee.github.io/blog/webpack%E9%85%8D%E7%BD%AE/</guid>
            <description>&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;var webpack = require(&#39;webpack&#39;);
var path = require(&amp;quot;path&amp;quot;);
module.exports = {
    // context: __dirname + &amp;quot;/src&amp;quot;,//The base directory (absolute path!)
    // 表示入口文件
    cache: true,
    entry: {
        &#39;bundle&#39;: &#39;./src&#39;,
        // &#39;app2&#39;: &#39;/src/app2&#39;
    },
    minimize: true,
    // 表示输出文件
    output: {
        path: path.join(__dirname, &amp;quot;build&amp;quot;),// 编译好的文件目录
        filename: &#39;[name].min.js&#39;,
        chunkFilename: &amp;quot;[chunkhash].min.js&amp;quot;
        // sourceMapFilename: &#39;[file].map&#39;
        // publicPath: &amp;quot;/build/&amp;quot; // 引用你的文件时考虑使用的地址
    },
    // 表示这个依赖项是外部lib，遇到require它不需要编译，
    // 且在浏览器端对应window.React
    externals: [
        {
            &#39;react&#39;: &#39;window.React&#39;,
            &#39;react-bootstrap&#39;: &#39;window.ReactBootstrap&#39;,
            &#39;jquery&#39;: &#39;window.jQuery&#39;
        }
    ],

    module: {
        loaders: [
            // 凡是遇到jsx结尾的，都用jsx-loader这个插件来加载，
            // 且启用harmony模式
            //{ test: path.join(__dirname, &#39;es6&#39;), loader: &#39;babel-loader&#39; },&#39;jsx-loader?harmony&#39;
            { test: /\.js$/, loader: &#39;babel-loader!jsx-loader?harmony&#39; },
            { test: /\.jsx$/, loader: &amp;quot;jsx-loader?insertPragma=React.DOM&amp;quot; },
            { test: /\.less$/, loader: &#39;style-loader!css-loader!less-loader&#39; }, // use ! to chain loaders
            { test: /\.css$/, loader: &#39;style-loader!css-loader&#39; },
            { test: /\.(png|jpg)$/, loader: &#39;url-loader?limit=8192&#39; }, // 内联 base64 URLs, 限定 &amp;lt;=8k 的图片, 其他的用 URL

            // required for bootstrap icons
            { test: /\.woff$/, loader: &amp;quot;url-loader?prefix=font/&amp;amp;limit=5000&amp;amp;mimetype=application/font-woff&amp;quot; },
            { test: /\.ttf$/, loader: &amp;quot;file-loader?prefix=font/&amp;quot; },
            { test: /\.eot$/, loader: &amp;quot;file-loader?prefix=font/&amp;quot; },
            { test: /\.svg$/, loader: &amp;quot;file-loader?prefix=font/&amp;quot; }

        ]
    },
    resolve: {
        // 现在可以写 require(&#39;file&#39;) 代替 require(&#39;file.coffee&#39;)
        extensions: [&#39;&#39;, &#39;.webpack.js&#39;, &#39;.coffee&#39;, &#39;.json&#39;, &#39;.js&#39;, &#39;.jsx&#39;],
        modulesDirectories: [
            &#39;node_modules&#39;,
            &#39;bower_components&#39;,
            &#39;lib&#39;,
            &#39;src&#39;
        ]
        // alias: {
        //     // Bind version of jquery
        //     jquery: &amp;quot;jquery-2.0.3&amp;quot;,

        //     // Bind version of jquery-ui
        //     &amp;quot;jquery-ui&amp;quot;: &amp;quot;jquery-ui-1.10.3&amp;quot;,

        //     // jquery-ui doesn&#39;t contain a index file
        //     // bind module to the complete module
        //     &amp;quot;jquery-ui-1.10.3$&amp;quot;: &amp;quot;jquery-ui-1.10.3/ui/jquery-ui.js&amp;quot;,
        // }
    },
    devtool: &#39;source-map&#39;,
    plugins: [
        new webpack.DefinePlugin({// definePlugin 接收字符串插入到代码当中, 所以你需要的话可以写上 JS 的字符串
            __DEV__: JSON.stringify(JSON.parse(process.env.BUILD_DEV || &#39;true&#39;)),
            __PRERELEASE__: JSON.stringify(JSON.parse(process.env.BUILD_PRERELEASE || &#39;false&#39;))
        }),
        new webpack.optimize.UglifyJsPlugin(),
        new webpack.optimize.CommonsChunkPlugin(&#39;common.min.js&#39;, 5),
        new webpack.ProvidePlugin({
            // Automtically detect jQuery and $ as free var in modules
            // and inject the jquery library
            // This is required by many jquery plugins
            $: &amp;quot;jquery&amp;quot;,
            jQuery: &amp;quot;jquery&amp;quot;,
            &amp;quot;window.jQuery&amp;quot;: &amp;quot;jquery&amp;quot;
        })
    ]
};
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
        
    </channel>
</rss>
